{"version":3,"file":"static/js/459.79f3651a.chunk.js","mappings":"sKACA,OAAgB,SAAW,qCAAqC,WAAa,wC,kBC6C7E,EA3C2B,SAAC,GAOrB,IANLA,EAMI,EANJA,YACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAGMC,EAAY,UAAMC,EAAAA,IAAN,OAAqBP,GAUvC,OACE,gBACEQ,UAAS,UAAKC,EAAAA,kBAAL,YAA8BT,GAAeS,EAAAA,SAA7C,YACPJ,GAAiBI,EAAAA,YAFrB,UAKGR,IACC,gBACEO,UAAWC,EAAAA,iBACXC,IAjBW,SAAAV,GACjB,OAAIA,EACKM,EAEAK,EAAAA,EAEV,CAWYC,CAAWZ,GAChBa,IAAKZ,EACLa,MAAM,UAGV,cAAGN,UAAWC,EAAAA,mBAAd,SAAuCR,GAAQE,IAC9CD,IAAa,cAAGM,UAAWC,EAAAA,kBAAd,SAAsCP,IACnDE,IAAc,cAAGI,UAAWC,EAAAA,kBAAd,SAAsCL,IACpDC,IACC,cAAGG,UAAWC,EAAAA,kBAAd,SAAsCJ,MAI7C,C,gFC3CD,GAAgB,gBAAkB,+B,sDCiDlC,EA3Ca,WACX,OAAwBU,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,IAAgBH,EAAS,YACtBI,MAAK,SAAAZ,GACJG,EAAeH,EAAKa,MACpBZ,EAAQD,EACT,IACAc,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAb,IACXS,SAAQ,kBAAMV,GAAa,EAAnB,GACZ,GAAE,CAACG,IAEIJ,GAqBN,SAACY,EAAA,EAAD,KApBCV,GAASN,GAAQE,EAAYe,OAAS,GACrC,gBAAKzB,UAAWC,EAAAA,qBAAhB,UACE,eAAID,UAAWC,EAAAA,gBAAf,SACGS,EAAYgB,KAAI,SAAAL,GAAI,OACnB,SAACM,EAAA,EAAD,CACE3B,UAAWC,EAAAA,SAEXT,YAAa6B,EAAKO,aAClBnC,KAAM4B,EAAK5B,KACXC,UAAW2B,EAAK3B,UAChBkB,UAAWA,EACXE,MAAOA,GALFO,EAAKQ,QAHO,SAczB,wBAAI,wCAKT,C","sources":["webpack://react-homework-template/./src/components/AdditionalInfoCard/AdditionalInfoCard.module.css?dbfb","components/AdditionalInfoCard/AdditionalInfoCard.jsx","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"AdditionalInfoCard_castItem__QOaj4\",\"reviewItem\":\"AdditionalInfoCard_reviewItem__06fkW\"};","import css from './AdditionalInfoCard.module.css';\nimport { IMG_BASE_URL, CAST_IMG_PLACEHOLDER_URL } from 'api/api-config';\n\nconst AdditionalInfoCard = ({\n  profilePath,\n  name,\n  character,\n  author,\n  reviewDate,\n  reviewContent,\n}) => {\n\n  const CAST_IMG_URL = `${IMG_BASE_URL}${profilePath}`;\n\n  const castImgUrl = profilePath => {\n    if (profilePath) {\n      return CAST_IMG_URL;\n    } else {\n      return CAST_IMG_PLACEHOLDER_URL;\n    }\n  };\n\n  return (\n    <li\n      className={`${css.additionaInfoItem} ${profilePath && css.castItem} ${\n        reviewContent && css.reviewItem\n      }`}\n    >\n      {name && (\n        <img\n          className={css.additionaInfoImg}\n          src={castImgUrl(profilePath)}\n          alt={name}\n          width=\"80px\"\n        />\n      )}\n      <p className={css.additionaInfoTitle}>{name || author}</p>\n      {character && <p className={css.additionaInfoText}>{character}</p>}\n      {reviewDate && <p className={css.additionaInfoText}>{reviewDate}</p>}\n      {reviewContent && (\n        <p className={css.additionaInfoText}>{reviewContent}</p>\n      )}\n    </li>\n  );\n};\n\nexport default AdditionalInfoCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"castDetailsList\":\"Cast_castDetailsList__ZOOHV\"};","import css from './Cast.module.css';\nimport AdditionalInfoCard from 'components/AdditionalInfoCard/AdditionalInfoCard';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'api/api-fetches';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [data, setData] = useState(null);\n  const [castDetails, setCastDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId, '/credits')\n      .then(data => {\n        setCastDetails(data.cast);\n        setData(data);\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return !isLoading ? (\n    !error && data && castDetails.length > 0 ? (\n      <div className={css.castDetailsContainer}>\n        <ul className={css.castDetailsList}>\n          {castDetails.map(cast => (\n            <AdditionalInfoCard\n              className={css.castItem}\n              key={cast.cast_id}\n              profilePath={cast.profile_path}\n              name={cast.name}\n              character={cast.character}\n              isLoading={isLoading}\n              error={error}\n            />\n          ))}\n        </ul>\n      </div>\n    ) : (\n      <h5>Sorry, no cast details at this time.</h5>\n    )\n  ) : (\n    <Loader />\n  );\n};\n\nexport default Cast;\n"],"names":["profilePath","name","character","author","reviewDate","reviewContent","CAST_IMG_URL","IMG_BASE_URL","className","css","src","CAST_IMG_PLACEHOLDER_URL","castImgUrl","alt","width","useState","data","setData","castDetails","setCastDetails","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieDetails","then","cast","catch","finally","Loader","length","map","AdditionalInfoCard","profile_path","cast_id"],"sourceRoot":""}