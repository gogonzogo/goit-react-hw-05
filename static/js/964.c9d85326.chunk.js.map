{"version":3,"file":"static/js/964.c9d85326.chunk.js","mappings":"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","sources":["api/api-config.js","api/api-fetches.js","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["\nexport const API_KEY = '5d8e08b77a668b368d7194faf94b14f5';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nexport const MOVIE_IMG_PLACEHOLDER_URL = 'https://placehold.jp/84848b/ffffff/200x300.jpg?text=Movie%20Poster%20Unavailable';\nexport const CAST_IMG_PLACEHOLDER_URL = 'https://placehold.jp/95959d/ffffff/80x120.png?text=NO%20IMAGE%20AVAILABLE';\n","import axios from 'axios';\nimport {API_KEY, BASE_URL} from './api-config';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieDetails = async (movieId, details) => {\n  const { data } = await axios.get(\n    `movie/${movieId}${details}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getSearchMovies = async (query) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieGalleryItem\":\"MovieCard_movieGalleryItem__dnDEx\",\"movieGalleryImg\":\"MovieCard_movieGalleryImg__9rhm1\",\"movieItemDetails\":\"MovieCard_movieItemDetails__QiHqU\",\"movieGalleryDetailItem\":\"MovieCard_movieGalleryDetailItem__w2MbF\"};","import css from './MovieCard.module.css';\nimport { IMG_BASE_URL, MOVIE_IMG_PLACEHOLDER_URL } from 'api/api-config';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieCard = ({\n  movie,\n  releaseYear,\n  userScore,\n  overview,\n  genres,\n  isLoading,\n}) => {\n\n  const MOVIE_IMG_URL = `${IMG_BASE_URL}${movie.poster_path}`;\n\n  const movieImg = movie => {\n    if (movie.poster_path) {\n      return MOVIE_IMG_URL;\n    } else {\n      return MOVIE_IMG_PLACEHOLDER_URL;\n    }\n  };\n\n  return !isLoading ? (\n    <>\n      <li className={css.movieGalleryItem}>\n        <img\n          className={css.movieGalleryImg}\n          src={movieImg(movie)}\n          alt={movie.title}\n          data-value={movie.id}\n          width=\"200px\"\n        />\n        <ul className={css.movieItemDetails}>\n          {releaseYear && (\n            <>\n              <li className={css.movieGalleryDetailItem}>\n                {movie.title || movie.original_name}\n              </li>\n              <li className={css.movieGalleryDetailItem}>\n                {releaseYear.slice(0, 4)}\n              </li>\n            </>\n          )}\n          {userScore && (\n            <li className={css.movieGalleryDetailItem}>\n              User Score: {userScore}\n            </li>\n          )}\n          {overview && (\n            <li className={css.movieGalleryDetailItem}>{overview}</li>\n          )}\n          {genres && (\n            <li className={css.movieGalleryDetailItem}>\n              Genres:{' '}\n              {genres.map(genre => (\n                <span key={genre.id}>{genre.name} </span>\n              ))}\n            </li>\n          )}\n        </ul>\n      </li>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"movieGallery\":\"MovieGallery_movieGallery__M2pL-\"};","import css from './MovieGallery.module.css';\nimport { useLocation, Link } from 'react-router-dom';\nimport MovieCard from '../MovieCard/MovieCard';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieGallery = ({ movies, isLoading }) => {\n  const location = useLocation();\n\n  if (!movies) {\n    return;\n  }\n  return !isLoading ? (\n    <ul className={css.movieGallery}>\n      {movies.map(movie => (\n        <Link\n          key={movie.id}\n          to={`/movies/${movie.id}`}\n          state={{ from: location.pathname + location.search }}\n        >\n          <MovieCard movie={movie} isLoading={isLoading} />\n        </Link>\n      ))}\n    </ul>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default MovieGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieSearchContainer\":\"Movies_movieSearchContainer__Nvnzc\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\",\"searchFormContainer\":\"SearchForm_searchFormContainer__eByRx\"};","import css from './SearchForm.module.css';\nimport { useState } from 'react';\n\nconst SearchForm = ({onSubmit}) => {\n  const [userInput, setUserInput] = useState('');\n  \n\n  const handleChange = (e) => {\n    const query = e.target.value;\n    setUserInput(query);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(userInput);\n  }\n\n  return (\n    <div className={css.searchContainer}>\n      <form onSubmit={handleSubmit} className={css.searchFormContainer}>\n        <input\n          className={css.searchFormInput}\n          name=\"search\"\n          type=\"text\"\n          value={userInput}\n          onChange={handleChange}\n        ></input>\n        <button className={css.searchFormButton} type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchForm;","import css from './Movies.module.css';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'api/api-fetches';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchComplete, setSearchComplete] = useState(false);\n\n  const handleSubmit = userInput => {\n    if (!userInput) {\n      return;\n    }\n    setSearchParams({ query: userInput });\n  };\n\n  useEffect(() => {\n    let query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    setIsLoading(true);\n    getSearchMovies(query)\n      .then(data => setSearchedMovies(data.results))\n      .catch(err => setError(err))\n      .finally(() => {\n        setIsLoading(false);\n        setSearchComplete(true);\n      });\n  }, [searchParams]);\n\n  return (\n    <div className={css.movieSearchContainer}>\n      <SearchForm onSubmit={handleSubmit} />\n      {searchComplete && searchedMovies.length < 1 && !error ? (\n        <h1>No movies match search</h1>\n      ) : (\n        <>\n          <MovieGallery movies={searchedMovies} isLoading={isLoading} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","IMG_BASE_URL","MOVIE_IMG_PLACEHOLDER_URL","CAST_IMG_PLACEHOLDER_URL","axios","getTrendingMovies","data","getMovieDetails","movieId","details","getSearchMovies","query","movie","releaseYear","userScore","overview","genres","isLoading","MOVIE_IMG_URL","poster_path","Loader","className","css","src","movieImg","alt","title","id","width","original_name","slice","map","genre","name","movies","location","useLocation","to","state","from","pathname","search","MovieCard","onSubmit","useState","userInput","setUserInput","e","preventDefault","type","value","onChange","target","useSearchParams","searchParams","setSearchParams","searchedMovies","setSearchedMovies","setIsLoading","error","setError","searchComplete","setSearchComplete","useEffect","get","then","results","catch","err","finally","length","MovieGallery"],"sourceRoot":""}