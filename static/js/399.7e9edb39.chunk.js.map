{"version":3,"file":"static/js/399.7e9edb39.chunk.js","mappings":"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","sources":["api/api-config.js","api/api-fetches.js","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://react-homework-template/./src/components/AdditionalInfoLinks/AdditionalInfoLinks.module.css?6183","components/AdditionalInfoLinks/AdditionalInfoLinks.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["\nexport const API_KEY = '5d8e08b77a668b368d7194faf94b14f5';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nexport const MOVIE_IMG_PLACEHOLDER_URL = 'https://placehold.jp/84848b/ffffff/200x300.jpg?text=Movie%20Poster%20Unavailable';\nexport const CAST_IMG_PLACEHOLDER_URL = 'https://placehold.jp/95959d/ffffff/80x120.png?text=NO%20IMAGE%20AVAILABLE';\n","import axios from 'axios';\nimport {API_KEY, BASE_URL} from './api-config';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieDetails = async (movieId, details) => {\n  const { data } = await axios.get(\n    `movie/${movieId}${details}?api_key=${API_KEY}`\n  );\n  console.log(data)\n  return data;\n};\n\nexport const getSearchMovies = async (query) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieGalleryItem\":\"MovieCard_movieGalleryItem__dnDEx\",\"movieGalleryImg\":\"MovieCard_movieGalleryImg__9rhm1\",\"movieItemDetails\":\"MovieCard_movieItemDetails__QiHqU\",\"movieGalleryDetailItem\":\"MovieCard_movieGalleryDetailItem__w2MbF\"};","import css from './MovieCard.module.css';\nimport { IMG_BASE_URL, MOVIE_IMG_PLACEHOLDER_URL } from 'api/api-config';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieCard = ({\n  movie,\n  releaseYear,\n  userScore,\n  overview,\n  genres,\n  isLoading,\n}) => {\n\n  const MOVIE_IMG_URL = `${IMG_BASE_URL}${movie.poster_path}`;\n\n  const movieImg = movie => {\n    if (movie.poster_path) {\n      return MOVIE_IMG_URL;\n    } else {\n      return MOVIE_IMG_PLACEHOLDER_URL;\n    }\n  };\n\n  return !isLoading ? (\n    <>\n      <li className={css.movieGalleryItem}>\n        <img\n          className={css.movieGalleryImg}\n          src={movieImg(movie)}\n          alt={movie.title}\n          data-value={movie.id}\n          width=\"200px\"\n        />\n        <ul className={css.movieItemDetails}>\n          {releaseYear && (\n            <>\n              <li className={css.movieGalleryDetailItem}>\n                {movie.title || movie.original_name}\n              </li>\n              <li className={css.movieGalleryDetailItem}>\n                {releaseYear.slice(0, 4)}\n              </li>\n            </>\n          )}\n          {userScore && (\n            <li className={css.movieGalleryDetailItem}>\n              User Score: {userScore}\n            </li>\n          )}\n          {overview && (\n            <li className={css.movieGalleryDetailItem}>{overview}</li>\n          )}\n          {genres && (\n            <li className={css.movieGalleryDetailItem}>\n              Genres:{' '}\n              {genres.map(genre => (\n                <span key={genre.id}>{genre.name} </span>\n              ))}\n            </li>\n          )}\n        </ul>\n      </li>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetails_movieDetailsContainer__hxmcN\",\"movieDetailsList\":\"MovieDetails_movieDetailsList__goILT\"};","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"BackButton_backButton__SI3qJ\"};","import css from './BackButton.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\n\nconst BackButton = ({ onClick }) => {\n  const location = useLocation();\n  const path = useRef(location?.state?.from ?? '/');\n\n  // const getBackPath = () => {\n  //   let path = location.pathname;\n  //   let newPath;\n\n  //   if (path.includes('?query=')) {\n  //     newPath = '/movies';\n  //   }\n  //   if (path.includes('/movie')) {\n  //     newPath = '/';\n  //   }\n  //   return newPath;\n  // };\n\n  // const newPath = getBackPath();\n\n  return (\n    <Link className={css.backButton} to={path.current}>\n      Go Back\n    </Link>\n  );\n};\n\nexport default BackButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"additionalMovieInfo\":\"AdditionalInfoLinks_additionalMovieInfo__5r-Jb\",\"additionalMovieInfoListItem\":\"AdditionalInfoLinks_additionalMovieInfoListItem__IF9Rl\"};","import css from './AdditionalInfoLinks.module.css';\nimport { NavLink, Outlet, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst AdditionalInfoLinks = () => {\n  const { movieId } = useParams();\n\n  return (\n    <>\n      <div className={css.additionalMovieInfo}>\n        <p className={css.additionalMovieInfoTitle}>Additional information</p>\n        <ul className={css.additionalMovieInfoList}>\n          <li className={css.additionalMovieInfoListItem}>\n            <NavLink to={`/movies/${movieId}/cast`} className={css.castLink}>\n              Cast\n            </NavLink>\n          </li>\n          <li className={css.additionalMovieInfoListItem}>\n            <NavLink\n              to={`/movies/${movieId}/reviews`}\n              className={css.reviewLink}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default AdditionalInfoLinks;\n","import css from './MovieDetails.module.css';\nimport BackButton from 'components/BackButton/BackButton';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport CastAndReviewsLayout from 'components/AdditionalInfoLinks/AdditionalInfoLinks';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'api/api-fetches'; \nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId, '')\n      .then(data => {\n        setMovieDetails(data);\n      })\n      .catch(err => {\n        setError(err);\n      })\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return movieDetails.length > 0 ? (\n    !isLoading ? (\n      <div className={css.movieDetailsContainer}>\n        <BackButton />\n        <ul className={css.movieDetailsList}>\n          <MovieCard\n            movie={movieDetails}\n            releaseYear={movieDetails.release_date}\n            userScore={movieDetails.vote_average}\n            overview={movieDetails.overview}\n            genres={movieDetails.genres}\n            error={error}\n          />\n        </ul>\n        <CastAndReviewsLayout />\n      </div>\n    ) : (\n      <Loader />\n    )\n  ) : (\n    <h1>Sorry, no movie details for the selected movie.</h1>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","IMG_BASE_URL","MOVIE_IMG_PLACEHOLDER_URL","CAST_IMG_PLACEHOLDER_URL","axios","getTrendingMovies","data","getMovieDetails","movieId","details","console","log","getSearchMovies","query","movie","releaseYear","userScore","overview","genres","isLoading","MOVIE_IMG_URL","poster_path","Loader","className","css","src","movieImg","alt","title","id","width","original_name","slice","map","genre","name","onClick","location","useLocation","path","useRef","state","from","to","current","useParams","Suspense","fallback","useState","movieDetails","setMovieDetails","setIsLoading","error","setError","useEffect","then","catch","err","finally","length","MovieCard","release_date","vote_average"],"sourceRoot":""}